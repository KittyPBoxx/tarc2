mapscripts Summit_MapScripts {}

script TenjinNPC {
    lock

	if (!flag(FLAG_TENJIN_INTRO)) {
		createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
		msgbox(format("Teamwork.\pThe power of two.\pYou finally figured out the secret to this exam.\pLearning to work with another candidate."))
		removefieldmugshot

		createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
		msgbox(format("...\pWhere is the other candidate?"))
		removefieldmugshot

		createfieldmugshot(MUGSHOT_TEST, EMOTE_RAE)
		msgbox(format("...\p"))
		removefieldmugshot

		createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
		msgbox(format("...but the last battle was supposed to be impossible to solo...\pGive me on sec I need to rewrite my speech."))
		removefieldmugshot

		createfieldmugshot(MUGSHOT_TEST, EMOTE_RAE)
		msgbox(format("...\p"))
		removefieldmugshot

		createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
		msgbox(format("Umm... determination.\pThe power of er.... perseverance.\pYou finally figured out the secret..."))
		removefieldmugshot

		createfieldmugshot(MUGSHOT_TEST, EMOTE_RAE)
		msgbox(format("...\p"))
		removefieldmugshot

		setflag(FLAG_TENJIN_INTRO)
	}

	if (!defeated(TRAINER_DEITY_TENJIN)) {

		createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
		msgbox(format("Sigh... let's just do the battle, ok?"))
		removefieldmugshot
		trainerbattle_double(TRAINER_DEITY_TENJIN, Debug_EventScript_Script_1_Text_Battle1_Intro, Debug_EventScript_Script_1_Text_Battle1_Defeat, Debug_EventScript_Script_1_Text_Battle1_NotEnoughMons)

        special(GetBattleOutcome)
        if (var(VAR_RESULT) == B_OUTCOME_WON)
        {
            createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
            msgbox(format("That was the most exciting battle I've had in years!\pYou definitely deserve an internship with a god.\pMaybe even a paid one!\pI'll not supposed to do this but I'll let you warp straight to Berus."))
			msgbox(format("You need to hurry be cause the exam is almost over.\p And avoid the Lake! Scary pokemon Pokémon appear there at night."))
            removefieldmugshot

			playfanfare(MUS_OBTAIN_BADGE) 
        	msgbox(format("A new warp was unlocked!"))
        	setflag(FLAG_UNLOCK_BRIDGE_WARP)
			clearflag(FLAG_HIDE_FROSSGLASS)

			msgbox(format("Use {SELECT_BUTTON} to warp to the next area."))
        }

	}
	else {

        if (!flag(FLAG_UNLOCK_BRIDGE_WARP))
        {
            createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
            msgbox(format("That was the most exciting battle I've had in years!\pYou definitely deserve an internship with a god.\pMaybe even a paid one!\pI'll not supposed to do this but I'll let you warp straight to Berus."))
			msgbox(format("You need to hurry be cause the exam is almost over.\p And avoid the Lake! Scary pokemon Pokémon appear there at night."))
            removefieldmugshot

			playfanfare(MUS_OBTAIN_BADGE) 
        	msgbox(format("A new warp was unlocked!"))
        	setflag(FLAG_UNLOCK_BRIDGE_WARP)
			clearflag(FLAG_HIDE_FROSSGLASS)

			msgbox(format("Use {SELECT_BUTTON} to warp to the next area."))
        }
		else
		{
			createfieldmugshot(MUGSHOT_TEST, EMOTE_TENJIN)
			msgbox(format("You should go back now.\pAnd avoid the Lake! Scary pokemon Pokémon appear there at night."))
			removefieldmugshot

			msgbox("Unless you want a rematch?", MSGBOX_YESNO)

			if (var(VAR_RESULT) == 1) {
				trainerbattle_double(TRAINER_DEITY_TENJIN, Debug_EventScript_Script_1_Text_Battle1_Intro, Debug_EventScript_Script_1_Text_Battle1_Defeat, Debug_EventScript_Script_1_Text_Battle1_NotEnoughMons)
			} 
		}

	}

    release
    end

}

script SlidingTilePuzzle {
    lock

	msgbox(format("These rocks look like an image..."))


	setvar(VAR_0x8004, 1) // puzzleId
	setvar(VAR_0x8005, 0) // solved
	setvar(VAR_0x8008, 0) // return species
	special(DoSlidingPuzzle)
	waitstate

	if (var(VAR_0x8008) != 0) {

		msgbox("The image of a pokemon was revealed.\nDo you want ditto to take its form?", MSGBOX_YESNO)

		if (var(VAR_RESULT) == 1) {
			special(SetPlayerMonSpecies)
			msgbox(format("Ditto took on a new form!"))
		}
	}

    release
    end
}

movement MakeShortcut {
    walk_left * 2
}
